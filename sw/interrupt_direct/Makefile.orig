# Compiler defaults
CC = riscv32-unknown-elf-gcc
OBJCOPY = riscv32-unknown-elf-objcopy
AR = riscv32-unknown-elf-ar
SIZE = riscv32-unknown-elf-size
SREC2VHDL = ../bin/srec2vhdl
UPLOAD = ../bin/upload

# The target
TARGET = interrupt_direct

#-----
#----- do not edit below this point
#-----

# Program name
PROG_NAME = \"$(TARGET)\"

# Include common defines
COMMON_FILE = ../common.make

# Read in common settings
ifneq ("$(wildcard $(COMMON_FILE))","")
include $(COMMON_FILE)
else
endif

# Compiler flags
CFLAGS = -DF_CPU=$(F_CPU) -DBAUD_RATE=$(BAUD_RATE) -DPROG_NAME=$(PROG_NAME) -I$(INC) -O2 -g -march=rv32im -mabi=ilp32
# Linker flags
LDFLAGS = -g -Wall -T $(LD_SCRIPT) $(LIBTHUASRV32) -march=rv32im -mabi=ilp32 -nostartfiles --specs=nano.specs $(EXTRA_LINKER_FLAGS)
# All header files
HFILES = $(wildcard *.h)

# Find all C files and transform to object files
SRC = $(wildcard *.c) $(START_UP)
OBJ = $(patsubst %.c, %.o, $(SRC))

all: $(TARGET) $(HFILES) $(COMMON_FILE)

%.o: %.c $(HFILES) $(COMMON_FILE)
	$(CC) $(CFLAGS) -c $< -o $@


$(TARGET): $(OBJ) $(HFILES) $(COMMON_FILE)
	$(CC) -O2 -g -o $(TARGET) $(OBJ) $(LDFLAGS)
	$(OBJCOPY) -O srec $(TARGET) $(TARGET).srec
	$(SREC2VHDL) -wf0 $(TARGET).srec $(TARGET).vhd

upload: $(TARGET).srec
	$(UPLOAD) -v $(TARGET).srec

uploadrun: $(TARGET).srec
	$(UPLOAD) -vj $(TARGET).srec

clean:
	rm -f $(TARGET) $(TARGET).srec $(TARGET).vhd $(OBJ)
